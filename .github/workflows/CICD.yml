name: Build, Test, and Deploy to S3

on:
  pull_request:
    branches:
      - development

jobs:
  build:
    if: if: github.ref != 'refs/heads/base' || github.ref != 'refs/heads/development'
    runs-on: ubuntu-latest


    environment:
      name: development

    env:
      global:
        - APPLICATION_NAME: dimes

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node_version }}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 'lts/*'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

      - name: Cache dependencies
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        run: yarn install

      - name: Clone deploy scripts
        run: |
          if [ ! -d deploy_scripts ]; then
            git clone https://github.com/RockefellerArchiveCenter/deploy_scripts.git
          fi

      - name: Substitute environment variables
        run: sudo deploy_scripts/substitute_env.sh

      - name: Build and test
        run: |
          docker build .
          CI=false yarn run build
          yarn test

      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Export secrets to environment variables
          uses: oNaiPs/secrets-to-env-action@v1.5
          with:
            secrets: ${{ toJSON(secrets) }}

        - name: Clone deploy scripts if not present
          run: |
            if [ ! -d deploy_scripts ]; then
              git clone https://github.com/RockefellerArchiveCenter/deploy_scripts.git;
            fi

        - name: Substitute environment variables
          uses: tvarohohlavy/inplace-envsubst-action@v1.0.0
          with:
            files: deploy_scripts/containers/invalidate_cloudfront_cache.sh

        - name: Make deploy scripts executable
          run: chmod +x deploy_scripts/*.sh

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v4.0.2
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
            role-to-assume: ${{ secrets.AWS_DEPLOY_ROLE }}
            role-skip-session-tagging: true
            role-duration-seconds: 1000
            aws-region: us-east-1

        - name: Sync to AWS
          uses: jakejarvis/s3-sync-action@v0.5.1
          with:
            args: --exclude '.git/*' --exclude '.github/*' --exclude 'README.md'
          env:
            AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET_NAME }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: 'us-east-1'

        - name: Deploy to S3
          run: aws s3 sync $LOCAL_DIR s3://$AWS_BUCKET_NAME --region us-east-1

        - name: Invalidate CloudFront cache
          run: bash deploy_scripts/containers/invalidate_cloudfront_cache.sh
